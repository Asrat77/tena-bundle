<%= form_with(model: prescription, class: 'needs-validation', novalidate: true) do |form| %>
  <% if prescription.errors.any? %>
    <div class="alert alert-danger">
      <h2><%= pluralize(prescription.errors.count, "error") %> prohibited this prescription from being saved:</h2>
      <ul>
        <% prescription.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="mb-3">
    <%= form.label :patient_id, class: 'form-label' %>
    <%= form.collection_select :patient_id, TenaDcms::Patient.all, :id, :first_name, { prompt: 'Select Patient' }, { class: 'form-select', required: true } %>
    <div class="invalid-feedback">Patient is required</div>
  </div>

  <div class="mb-3">
    <%= form.label :doctor_id, class: 'form-label' %>
    <%= form.collection_select :doctor_id, TenaDcms::Doctor.all, :id, :name, { prompt: 'Select Doctor' }, { class: 'form-select', required: true } %>
    <div class="invalid-feedback">Doctor is required</div>
  </div>


  <div class="mb-3">
    <%= form.label :drug_information, class: 'form-label' %>
    <%= form.text_field :drug_information, class: 'form-control', required: true %>
    <div class="invalid-feedback">Dosage is required</div>
  </div>


  <div class="mb-3">
    <%= form.label :start_date, class: 'form-label' %>
    <%= form.date_field :start_date, class: 'form-control', required: true %>
    <div class="invalid-feedback">Start date is required</div>
  </div>

  <div class="mb-3">
    <%= form.label :end_date, class: 'form-label' %>
    <%= form.date_field :end_date, class: 'form-control' %>
  </div>

  <div class="mb-3">
    <%= form.label :doctor_note, class: 'form-label' %>
    <%= form.text_area :doctor_note, class: 'form-control', rows: 3 %>
  </div>

  <div class="mb-3">
    <%= form.submit class: 'btn btn-primary' %>
  </div>
<% end %>

<script>
  // Example starter JavaScript for disabling form submissions if there are invalid fields
  (function () {
    'use strict'

    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    var forms = document.querySelectorAll('.needs-validation')

    // Loop over them and prevent submission
    Array.prototype.slice.call(forms)
      .forEach(function (form) {
        form.addEventListener('submit', function (event) {
          if (!form.checkValidity()) {
            event.preventDefault()
            event.stopPropagation()
          }

          form.classList.add('was-validated')
        }, false)
      })
  })()
</script>
